(function() {
  var SingleLineLogger, TerminalLogger, createObject, inherits, isObject;

  inherits = require('inherits-ex/lib/inherits');

  createObject = require('inherits-ex/lib/createObjectWith');

  isObject = require('util-ex/lib/is/type/object');

  TerminalLogger = require('./');

  module.exports = SingleLineLogger = (function() {
    inherits(SingleLineLogger, TerminalLogger);

    SingleLineLogger.prototype.NEWLINE = '';

    function SingleLineLogger(aName, aOptions) {
      var ignoreSingleLine, vMissing;
      if (!(this instanceof SingleLineLogger)) {
        return createObject(SingleLineLogger, arguments);
      }
      SingleLineLogger.__super__.constructor.apply(this, arguments);
      if (isObject(aName)) {
        aOptions = aName;
      }
      if (aOptions) {
        ignoreSingleLine = aOptions.ignoreSingleLine;
      }
      vMissing = this.valid();
      if (vMissing.length) {
        this.dontSupport = true;
        if (!ignoreSingleLine) {
          throw new Error('missing methods:' + vMissing.join(','));
        }
      }
    }

    SingleLineLogger.prototype.valid = function() {
      var vMethods;
      vMethods = ['clearLine', 'cursorTo'];
      return vMethods = vMethods.filter(function(m) {
        return !(m in process.stderr);
      });
    };

    SingleLineLogger.prototype._write = function(msg, aPos) {
      if (!this.dontSupport) {
        if (aPos == null) {
          aPos = 0;
        }
        process.stderr.clearLine();
        process.stderr.cursorTo(aPos);
        process.stderr.write(msg);
      } else {
        SingleLineLogger.__super__._write.call(this, msg);
      }
      return this;
    };

    return SingleLineLogger;

  })();

}).call(this);

//# sourceMappingURL=single-line.js.map
